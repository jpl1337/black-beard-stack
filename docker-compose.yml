# This is the docker compose for black-beard-stack
version: "3.9"
networks:
  frontend_net:
  backend_net:
services:
  vpn:
    image: qmcgaw/gluetun
    container_name: vpn
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_REGIONS=${SERVER_REGIONS}
      - TZ=${TZ}
      - VPN_LOCAL_NETWORK=192.168.69.0/24
    ports:
      - 8080:8080  # qBittorrent
      - 8118:8118  # Gluetun HTTP Proxy
      - 9696:9696  # Prowlarr
      - 5055:5055  # Overseerr
      - 8686:8686  # Lidarr
      - 8787:8787  # Readarr
      - 8181:8181  # Tautulli
      - 6767:6767  # Bazarr
      - 8265:8265  # Tdarr WebUI
      - 8266:8266  # Tdarr Node
    volumes:
      - ./configs/gluetun:/gluetun
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget","--spider", "-q", "http://localhost:8000/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/index.html:/usr/share/nginx/html/index.html:ro
    ports:
      - "80:80"
    depends_on:
      - plex
      - qbittorrent
      - sabnzbd
      - prowlarr
      - radarr
      - sonarr
      - tdarr
      - overseerr
      - readarr
      - lidarr
      - bazarr
      - tautulli
    networks:
      - frontend_net
      - backend_net
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:80"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host 
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - VERSION=docker
      - PLEX_CLAIM=${PLEX_CLAIM} # Optional claim token for initial setup
    volumes:
      - ./configs/plex:/config
      - ${MEDIA_PATH}/tv:/tv
      - ${MEDIA_PATH}/movies:/movies
      - ${MEDIA_PATH}/music:/music
      
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:32400/web/index.html#!/"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ./configs/qbittorrent:/config
      - ${MEDIA_PATH}/torrents:/data/torrents
    
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:8080"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/sabnzbd:/config
      - ${MEDIA_PATH}/usenet:/data/usenet
      - ${MEDIA_PATH}/usenet/incomplete-downloads:/data/usenet/incomplete-downloads #optional
    network_mode: service:vpn
    depends_on:
    - vpn
    ports:
      - 8080:8080
    restart: unless-stopped
    networks:
    - backend_net
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:8080"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
    - ./configs/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:9696"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/radarr:/config
      - ${MEDIA_PATH}/movies:/data/movies
      - ${MEDIA_PATH}/usenet:/data/usenet
      - ${MEDIA_PATH}/torrents:/data/torrents
    ports:
      - 7878:7878
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:7878"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/sonarr:/config
      - ${MEDIA_PATH}/tv:/data/tv #optional
      - ${MEDIA_PATH}/usenet:/data/usenet
      - ${MEDIA_PATH}/torrents:/data/torrents
    ports:
      - 8989:8989
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:8989"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${OVERSEERR_CONFIG_PATH}:/config
    ports:
      - 5055:5055
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:5055"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/readarr:/config
      - ${MEDIA_PATH}/books:/data/books #optional
      - ${MEDIA_PATH}/usenet:/data/usenet
      - ${MEDIA_PATH}/torrents:/data/torrents
    ports:
      - 8787:8787
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:8787"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/lidarr:/config
      - ${MEDIA_PATH}/music:/data/music #optional
      - ${MEDIA_PATH}/usenet:/data/usenet
      - ${MEDIA_PATH}/torrents:/data/torrents
    ports:
      - 8686:8686
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:8686"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/bazarr:/config
      - ${MEDIA_PATH}/movies:/data/movies #optional
      - ${MEDIA_PATH}/tv:/data/tv #optional
    ports:
      - 6767:6767
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:6767"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./configs/tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:8181"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=${TZ}
    ports:
      - 8191:8191
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    healthcheck:
      test: ["CMD", "curl","--fail", "-s", "http://localhost:8191"]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s

  tdarr:
    container_name: tdarr
    image: ghcr.io/haveagitgat/tdarr:latest
    restart: unless-stopped
    ports:
      - 8265:8265 # webUI port
      - 8266:8266 # server port
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${GUID}
      - UMASK_SET=002
      - nodeName=ServerNode
      - serverIP=0.0.0.0
      - serverPort=8266
      - webUIPort=8265
      - internalNode=true
      - inContainer=true
      - ffmpegVersion=6
    volumes:
      - ./configs/tdarr/server:/app/server
      - ./configs/tdarr/configs:/app/configs
      - ./configs/tdarr/logs:/app/logs
      - ${MEDIA_PATH}:/media
      - ${MEDIA_PATH}/transcode_cache:/temp
    devices:
     - /dev/dri:/dev/dri #Required for HW transcoding / QuickSync
    healthcheck:
      test: [
        "CMD", "curl","--fail", "-s", "http://localhost:8265",
        "&&", "curl","--fail", "-s", "http://localhost:8266",
      ]
      interval: 1m
      timeout: 30s
      retries: 5
      start_period: 30s